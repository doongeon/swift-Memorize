//
//  EmojiMemorizeGame.swift
//  Memorize
//
//  Created by ÎÇòÎèôÍ±¥ on 7/27/24.
//

import Foundation

class EmojiMemorizeGame: ObservableObject {
    private static let themes: Array<Theme<String>> = [
        Theme(
            name: "Fruit",
            contents: ["üçã", "üçâ", "üçå", "üçç", "ü•ë", "üçà", "ü•ù", "üçä", "ü••", "ü´í"],
            color: "red"
        ),
        Theme(
            name: "Tropical",
            contents: ["üå∫", "üå¥", "üçπ", "üê†", "üèùÔ∏è", "üçã‚Äçüü©", "ü¶ú", "ü¶©", "üèñÔ∏è", "ü•≠"],
            color: "pink"
        ),
        Theme(
            name: "Winter",
            contents: ["‚ùÑÔ∏è", "‚òÉÔ∏è", "üéÖ", "üß£", "üèÇ", "üéø", "üß¶", "üõ∑", "üå®Ô∏è", "üß§"],
            color: "grey"
        ),
        Theme(
            name: "Animals",
            contents: ["üê∂", "üê±", "üê≠", "üêπ", "üê∞", "ü¶ä", "üêª", "üêº", "üê®", "üêØ"],
            color: "blue"
        ),
        Theme(
            name: "Vehicles",
            contents: ["üöó", "üöï", "üöô", "üöå", "üöé", "üöë", "üöí", "üöê", "üöú", "üõµ"],
            color: "green"
        ),
        Theme(
            name: "Space",
            contents: ["üöÄ", "üõ∏", "üåå", "üå†", "ü™ê", "üåï", "üõ∏", "üëΩ", "üõ∞Ô∏è", "üöÄ"],
            color: "purple"
        )
    ]
    
    private static func acquireTheme() -> Theme<String> {
        if let randomTheme = EmojiMemorizeGame.themes.randomElement() {
            return randomTheme
        }
        
        return EmojiMemorizeGame.themes[0] // FIXME: bogus!!
    }
    
    private static func createMemorizeGame(_ theme: Theme<String>) -> MemorizeGame<String> {
        return MemorizeGame<String>(
            numOfPairOfCards: 8,
            cardContents: theme.getContents()
        )
    }
    
    private var theme: Theme<String>
    @Published private var model: MemorizeGame<String>
    
    init() {
        theme = EmojiMemorizeGame.acquireTheme()
        model = EmojiMemorizeGame.createMemorizeGame(theme)
    }
    
    
    var cards: Array<MemorizeGame<String>.Card> {
        model.cards
    }
    
    var score: Int {
        model.score
    }
    
    var themeName: String {
        theme.name
    }
    
    var colorTheme: String {
        theme.color
    }
    
    // MARK: - Intents
    
    func newGame() {
        theme = EmojiMemorizeGame.acquireTheme()
        model = EmojiMemorizeGame.createMemorizeGame(theme)
    }
    
    func choose(_ card: MemorizeGame<String>.Card) {
        model.choose(card)
    }
}
